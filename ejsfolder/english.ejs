<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quiz Application</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
    <link rel="shortcut icon" href="static/images/logo.avif" type="image/x-icon">
    <link rel="stylesheet" href="static/css/quiz.css">
    <link rel="shortcut icon" href="static/images/logo.avif" type="image/x-icon">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    </body>



    <style>
        .bg-excellent,
        .bg-out {
            background-color: #4CAF50;
            /* Green background */
            color: white;
        }

        .bg-good {
            background-color: #2196F3;
            /* Blue background */
            color: white;
        }

        .bg-try {
            background-color: #FFC107;
            /* Yellow background */
            color: black;
        }


        document.body {
            padding: 0;
            margin: 0;

            background-color: darkolivegreen;
        }

        p {
            font-size: 1.5em;
        }
    </style>
</head>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<body>
    <script>
        
        const questions = [
            {
                question: 'His ____ of who would win the football game was accurate.',
                options: ['forecast', 'expectation', 'prediction', 'Madrid'],
                correctAnswer: 'prediction'
            },

            {
                question: 'When the teacher leaves, the classroom becomes a war ____ because the students go crazy',
                options: ['neighbourhood', 'zone', 'outskirts', 'Leo Tolstoy'],
                correctAnswer: 'zone'
            },

            {
                question: ' Where is the location of your ____ ,sir?',
                options: ['home', 'house', 'residence', 'Saturn'],
                correctAnswer: 'residence'
            },
            {
                question: 'The Sears Tower is one of the tallest ____ in the world.',
                options: ['skyscraper', 'tower', 'residence', 'station'],
                correctAnswer: 'skyscraper'
            },
            {
                question: 'I believe wild animals should live in their natural ____, not in zoos.',
                options: ['habitat', 'cave', 'house', 'station'],
                correctAnswer: 'habitat'
            },
            {
                question: 'By winning the gold medal in the Olympics, he ____ worldwide recognition.',
                options: ['managed', 'achieved', 'succeed', 'try'],
                correctAnswer: 'achieved'
            },

            {
                question: "My grandmother has been in the hospital for ten days, but I haven't visited her __.",
                options: ['since', 'already', 'yet', 'change'],
                correctAnswer: 'yet'
            },

            {
                question: " A meeting has been ___ for Tuesday morning.",
                options: ['schedule', 'certified', 'chartered', 'moved'],
                correctAnswer: 'schedule'
            },

            {
                question: "The festival ended with a ___ fireworks display..",
                options: ['significant', 'spectacular', 'challenging', 'happy'],
                correctAnswer: 'spectacular'
            },

            {
                question: " The weather forecast said we _ have some rain today.",
                options: ['can', 'may', 'must', 'shall'],
                correctAnswer: 'may'
            },

            {
                question: " If I were you, I ___ some sunscreen on; you are going to get burnt.",
                options: ['would put', 'will put', 'could put', 'might put'],
                correctAnswer: 'would put'
            },
            {
                question: " Drivers should be more careful under wet and ____ conditions.",
                options: ['misleading', 'smooth', 'slippery', 'stone'],
                correctAnswer: 'slippery'
            },
            {
                question: "It ___ David on the phone; I'm sure David is in France till next Tuesday.",
                options: ["can't be", 'must be', 'will be', 'would be'],
                correctAnswer: "can't be"
            },
            {
                question: "If we go to Egypt, we ____ the Pyramids.",
                options: ["visit", 'are visiting', 'will visit', 'visited'],
                correctAnswer: "will visit"
            },
            {
                question: "If you watch TV for too long, you ____ a headache.",
                options: ["will get", 'got', 'would get', 'shall get'],
                correctAnswer: "will get"

            }
        ];

        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
        }
        shuffleArray(questions);
        let currentQuestionIndex = 0;
        var marks = 0;
        let userAnswers = [];
        let timer; // Variable to store the timer
        const overallTimeLimit = 600; // 5 minutes in seconds
        var spend = 0;

        function startTimer() {
            let timeLeft = overallTimeLimit;
            timer = setInterval(function () {
                timeLeft--;
                if (timeLeft) {
                    spend += 1;
                }
                if (timeLeft <= 0) {
                    clearInterval(timer);
                    displayResults();
                }
                updateTimerDisplay(timeLeft, spend);
            }, 1000);
        }

        function updateTimerDisplay(seconds, spendseco) {
            const timespend = document.getElementById('spend');
            const timerElement = document.getElementById('timer');
            if (timespend) {
                const sminutes = Math.floor(spendseco / 60);
                const spendseconds = spendseco % 60;
                timespend.textContent = `Time spent:${sminutes}m ${spendseconds}s`;
            }

            if (timerElement) {
                const minutes = Math.floor(seconds / 60);
                const remainingSeconds = seconds % 60;
                timerElement.textContent = `Time Left: ${minutes}m ${remainingSeconds}s`;
            }
        }
        function selectAnswer(index) {
            const userAnswer = questions[currentQuestionIndex]?.options[index];
            const correctAnswer = questions[currentQuestionIndex]?.correctAnswer;
            userAnswers.push({
                question: questions[currentQuestionIndex]?.question,
                userAnswer,
                correctAnswer,
            });
            if (userAnswer === correctAnswer) {
                marks++;
            }
            currentQuestionIndex++;
            if (currentQuestionIndex < questions.length) {
                updateQuiz();
            } else {

                displayResults();
            }
        }
        window.onload = startTimer();
        function updateQuiz() {
            document.body.innerHTML = `
          
                <div class="container" >
                    <div class="quiz-box">
                        <h1>Quiz</h1>
                        <div class="quiz-header">
                            <h1><span>E-2201</span></h1>
                            <span id="timer" class="header-score"></span>
                            <span class="header-score class="text-primary">Score: ${marks}/${questions.length}</span>
                        </div>
                        <div id="spend" class="header-score"></div>
                        <div class="quiz-question">
                            <p>${questions[currentQuestionIndex]?.question}</p>
                        </div>
                        <div class="options-list">
                            ${questions[currentQuestionIndex]?.options.map((option, index) => `
                                <button onclick="selectAnswer(${index})">${option}</button>
                            `).join('')}
                        </div>
                        <div class="quiz-footer">
                            <span class="question-total">${currentQuestionIndex + 1} of ${questions.length} questions</span>
                        </div>
                    </div>
                </div>
            `;
        }
        function displayResults() {
            clearInterval(timer); // Stop the timer


            submitTotalMarks();

            document.body.innerHTML = `<body class="bg-success-subtle">
                
            <center >
                <div class="container-fluid col-md-6 col-sm-4 style="max-height: 7000px; overflow-y: auto;">
                    <div class="quiz-box">
                        <h1>Quiz</h1>
                        <div class="quiz-header">
                            <h1><span>E-2201</span></h1>
                            <span class="header-score ">Score: ${marks}<span><span class="header-score ">/${questions.length}</span>
                        </div>
                        <div class="results-container ">
                            <h2>Results</h2>
                            ${userAnswers.map((answer, index) => `
                                <div class="question-result">
                                    <h3>Question ${index + 1}</h3>
                                    <div class="result-details">
                                        <p class="text-primary"><strong>Question:</strong>${answer.question}</p>
                                        <p><strong>Your Answer:</strong> ${answer.userAnswer}</p>
                                        <p class="text-success"><strong>Correct Answer:</strong> ${answer.correctAnswer}</p>
                                        <hr class="bg-dark h-25">
                                    </div>
                                </div>
                            `).join('')}
                            <div class="total-results">
                                <p>Total Questions: ${questions.length}</p>
                                <p>Total Marks: ${marks}</p>
                                <a href="home" class="text-white btn btn-primary" style="text-decoration:none;">Back</a>
                            </div>
                        </div>
                    </div>
                </div>
              </center>
              <body>
            `;
            
            if (marks == 15) {
                Swal.fire({
                    title: 'Outstanding',
                    icon: 'star',
                    confirmButtonText: 'OK',
                    customClass: {
                        background: 'bg-out' // Add your custom background class
                    }
                });
            }
            else if (marks >= 10) {
                Swal.fire({
                    title: 'Excellent',
                    icon: 'success',
                    confirmButtonText: 'OK',
                    customClass: {
                        background: 'bg-excellent' // Add your custom background class
                    }
                });
            } else if (marks <= 10 && marks >= 5) {
                Swal.fire({
                    title: 'Good',
                    icon: 'info',
                    confirmButtonText: 'OK',
                    customClass: {
                        background: 'bg-good' // Add your custom background class
                    }
                });
            } else if (marks <= 4) {
                Swal.fire({
                    title: 'You need to try!',
                    icon: 'warning',
                    confirmButtonText: 'OK',
                    customClass: {
                        background: 'bg-try' // Add your custom background class
                    }
                });
            }
        }
        updateQuiz();

        function submitTotalMarks() {
            var cid = '<%= cid %>';
            var cname = '<%= cname %>';
            var uid = '<%= uid %>';
            console.log('fcid', cid);
            console.log('fcname', cname);
            console.log('fuid', uid);
            console.log('---------');
            fetch('/totalmarks', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ cid, cname, uid, marks })// Correctly stringify the JSON object
            })
                .then(response => {
                    console.log('Total marks submitted successfully.');
                })
                .catch(error => console.error('Error:', error));
        }
    </script>
</body>

</html>